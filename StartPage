package pages;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;

public class StartPage {

    private JFrame frmStartPage;
    private JTextField textFieldSerial;
    private Connection conn;

    /**
     * Launch the application.
     */
    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    StartPage window = new StartPage();
                    window.frmStartPage.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    /**
     * Create the application and establish the database connection.
     */
    public StartPage() {
        initialize();
        establishConnection();
    }

    /**
     * Initialize the contents of the frame.
     */
    private void initialize() {
        frmStartPage = new JFrame();
        frmStartPage.setTitle("Start Page");
        frmStartPage.setIconImage(Toolkit.getDefaultToolkit().getImage("C:\\Users\\Francyne Rigor\\Downloads\\photos used\\samsungLogo.png"));
        frmStartPage.getContentPane().setBackground(new Color(255, 255, 255));
        frmStartPage.setBounds(100, 100, 1200, 700);
        frmStartPage.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frmStartPage.getContentPane().setLayout(null);

        JPanel panel = new JPanel();
        panel.setBackground(new Color(13, 38, 167));
        panel.setBounds(0, 93, 1186, 175);
        frmStartPage.getContentPane().add(panel);
        panel.setLayout(null);

        JLabel lblCheck = new JLabel("CHECK YOUR DEVICE'S CONDITION");
        lblCheck.setForeground(new Color(255, 255, 255));
        lblCheck.setBounds(20, 10, 489, 38);
        panel.add(lblCheck);
        lblCheck.setFont(new Font("Tahoma", Font.BOLD, 25));

        JLabel lblSerial = new JLabel("ENTER A DEVICE'S SERIAL NUMBER");
        lblSerial.setForeground(new Color(255, 255, 255));
        lblSerial.setBounds(30, 60, 400, 25);
        panel.add(lblSerial);
        lblSerial.setFont(new Font("Tahoma", Font.PLAIN, 20));

        textFieldSerial = new JTextField();
        textFieldSerial.setBounds(30, 90, 300, 25);
        panel.add(textFieldSerial);
        textFieldSerial.setFont(new Font("Tahoma", Font.PLAIN, 15));
        textFieldSerial.setColumns(10);
        lblSerial.setLabelFor(textFieldSerial);

        JButton btnReset = new JButton("RESET");
        btnReset.setBounds(30, 130, 100, 25);
        panel.add(btnReset);
        btnReset.setFont(new Font("Tahoma", Font.PLAIN, 15));

        JButton btnSubmit = new JButton("SUBMIT");
        btnSubmit.setBounds(228, 130, 100, 25);
        panel.add(btnSubmit);
        btnSubmit.setFont(new Font("Tahoma", Font.PLAIN, 15));

        // Action listener for the reset button
        btnReset.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                textFieldSerial.setText("");
            }
        });

        // Action listener for the submit button
        btnSubmit.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String serial = textFieldSerial.getText();
                if (serial.isEmpty()) {
                    JOptionPane.showMessageDialog(frmStartPage, "Please enter the device's serial number.", "Input Required", JOptionPane.WARNING_MESSAGE);
                } else {
                    // Check if the serial number exists in the database
                    boolean serialExists = checkSerialInDatabase(serial);
                    if (serialExists) {
                        // Proceed to the MainMenu frame
                        EventQueue.invokeLater(new Runnable() {
                            public void run() {
                                try {
                                    MainMenu window = new MainMenu(serial, conn);
                                    window.getFrame().setVisible(true);
                                    frmStartPage.dispose();
                                } catch (Exception e) {
                                    e.printStackTrace();
                                }
                            }
                        });
                    } else {
                        JOptionPane.showMessageDialog(frmStartPage, "Serial number not found in the database.", "Invalid Serial", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        });

        // Setting up other components of frmStartPage
        JLabel samsungLogo = new JLabel("");
        samsungLogo.setIcon(new ImageIcon("C:\\Users\\Francyne Rigor\\Downloads\\photos used\\samsungLogo.png"));
        samsungLogo.setBounds(10, 10, 150, 78);
        frmStartPage.getContentPane().add(samsungLogo);

        JLabel StartPageBanner = new JLabel("");
        StartPageBanner.setVerticalAlignment(SwingConstants.TOP);
        StartPageBanner.setIcon(new ImageIcon("C:\\Users\\Francyne Rigor\\Downloads\\photos used\\StartPageBanner.png"));
        StartPageBanner.setBounds(0, 258, 1186, 405);
        frmStartPage.getContentPane().add(StartPageBanner);
    }

    /**
     * Establish database connection.
     */
    private void establishConnection() {
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/samsungdb", "root", "sinrae_16");
            if (conn == null) {
                JOptionPane.showMessageDialog(frmStartPage, "Failed to connect to the database.", "Database Connection Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(frmStartPage, "Database connection error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Check if the serial number exists in the database.
     */
    private boolean checkSerialInDatabase(String serial) {
        boolean exists = false;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        try {
            String sql = "SELECT COUNT(*) FROM device WHERE SerialNum = ?";
            pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, serial);
            rs = pstmt.executeQuery();

            if (rs.next()) {
                int count = rs.getInt(1);
                exists = (count > 0);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(frmStartPage, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (rs != null) rs.close();
                if (pstmt != null) pstmt.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
        return exists;
    }
}

