package pages;

import java.awt.EventQueue;
import javax.swing.JFrame;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.JTextField;
import javax.swing.JButton;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import java.util.UUID;
import java.sql.Connection;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.JPanel;
import com.toedter.calendar.JDateChooser;
import javax.swing.SwingConstants;

public class BookAppointment {

    private JFrame frmBookAppointment;
    private JTextField textFieldContact;
    private JDateChooser dateChooser;
    private ButtonGroup timeGroup;
    private String fName;
    private String lName;
    private String email;
    private Connection conn;
    private String serialNumber;
    private JLabel lblInsertName;
    private JLabel lblInsertEmail;

    /**
     * Launch the application.
     */
    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    BookAppointment window = new BookAppointment(null, null, null, null, null);
                    window.frmBookAppointment.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    /**
     * Create the application.
     * @param conn 
     */
    public BookAppointment(String serialNumber, String fName, String lName, String email, Connection conn) {
        this.serialNumber = serialNumber;
        this.fName = fName;
        this.lName = lName;
        this.email = email;
        this.conn = conn;
        initialize();
        loadDeviceInfo();
    }

    /**
     * Initialize the contents of the frame.
     */
    private void initialize() {
        frmBookAppointment = new JFrame();
        frmBookAppointment.setIconImage(Toolkit.getDefaultToolkit().getImage("C:\\Users\\murei\\OneDrive\\Documents\\codes\\SAMSUNG Recall Management\\photos used\\samsungLogo.png"));
        frmBookAppointment.setTitle("Book an Appointment");
        frmBookAppointment.getContentPane().setBackground(new Color(255, 255, 255));
        frmBookAppointment.setBounds(100, 100, 728, 551);
        frmBookAppointment.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frmBookAppointment.getContentPane().setLayout(null);

        int frameWidth = frmBookAppointment.getContentPane().getWidth();
        int frameHeight = frmBookAppointment.getContentPane().getHeight();

        JLabel lblBookAppointment = new JLabel("Book an Appointment");
        lblBookAppointment.setHorizontalAlignment(SwingConstants.CENTER);
        lblBookAppointment.setFont(new Font("Tahoma", Font.BOLD, 20));
        lblBookAppointment.setBounds(232, 10, 250, 25);
        frmBookAppointment.getContentPane().add(lblBookAppointment);
        
        JLabel lblName = new JLabel("Name:");
        lblName.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblName.setBounds(175, 88, 100, 25);
        frmBookAppointment.getContentPane().add(lblName);
        
        lblInsertName = new JLabel();
        lblInsertName.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblInsertName.setBounds(325, 88, 200, 25);
        frmBookAppointment.getContentPane().add(lblInsertName);
        
        JLabel lblEmail = new JLabel("Email:");
        lblEmail.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblEmail.setBounds(175, 124, 100, 25);
        frmBookAppointment.getContentPane().add(lblEmail);
        
        lblInsertEmail = new JLabel();
        lblInsertEmail.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblInsertEmail.setBounds(325, 124, 200, 25);
        frmBookAppointment.getContentPane().add(lblInsertEmail);

        JLabel lblContact = new JLabel("Contact Info:");
        lblContact.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblContact.setBounds(175, 162, 100, 25);
        frmBookAppointment.getContentPane().add(lblContact);

        textFieldContact = new JTextField();
        textFieldContact.setBounds(325, 162, 200, 25);
        frmBookAppointment.getContentPane().add(textFieldContact);
        textFieldContact.setColumns(10);

        JLabel lblBranch = new JLabel("Branch:");
        lblBranch.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblBranch.setBounds(175, 202, 100, 25);
        frmBookAppointment.getContentPane().add(lblBranch);
        
        JComboBox<String> comboBoxBranch = new JComboBox<String>();
        comboBoxBranch.setFont(new Font("Tahoma", Font.PLAIN, 15));
        comboBoxBranch.setBounds(325, 202, 200, 25);
        frmBookAppointment.getContentPane().add(comboBoxBranch);
        
        comboBoxBranch.addItem("Manila");
        comboBoxBranch.addItem("Quezon City");
        comboBoxBranch.addItem("Batangas Area");
        comboBoxBranch.addItem("Lucena Area");
        comboBoxBranch.addItem("Cebu");
        comboBoxBranch.addItem("Iloilo");
        comboBoxBranch.addItem("Davao Region");

        JLabel lblType = new JLabel("Appointment Type:");
        lblType.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblType.setBounds(175, 242, 140, 25);
        frmBookAppointment.getContentPane().add(lblType);

        JComboBox<String> comboBoxAType = new JComboBox<>();
        comboBoxAType.setFont(new Font("Tahoma", Font.PLAIN, 15));
        comboBoxAType.setBounds(325, 242, 200, 25);
        frmBookAppointment.getContentPane().add(comboBoxAType);
        
        comboBoxAType.addItem("Refund");
        comboBoxAType.addItem("Recall");

        JLabel lblDate = new JLabel("Date:");
        lblDate.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblDate.setBounds(175, 282, 100, 25);
        frmBookAppointment.getContentPane().add(lblDate);

        dateChooser = new JDateChooser();
        dateChooser.setBounds(325, 282, 200, 25);
        frmBookAppointment.getContentPane().add(dateChooser);

        JLabel lblTime = new JLabel("Time:");
        lblTime.setFont(new Font("Tahoma", Font.PLAIN, 15));
        lblTime.setBounds(175, 322, 100, 25);
        frmBookAppointment.getContentPane().add(lblTime);

        JPanel timePanel = new JPanel();
        timePanel.setBounds(325, 322, 200, 100);
        frmBookAppointment.getContentPane().add(timePanel);
        timePanel.setLayout(null);

        // Add radio buttons for time slots
        timeGroup = new ButtonGroup();
        String[] times = { "9:00 AM", "10:00 AM", "11:00 AM", "1:00 PM", "2:00 PM", "3:00 PM", "4:00 PM" };
        String[] unavailableTimes = { "10:00 AM", "3:00 PM" };

        int xPosition = 0;
        int yPosition = 0;
        for (String time : times) {
            JRadioButton radioButton = new JRadioButton(time);
            radioButton.setFont(new Font("Tahoma", Font.PLAIN, 15));
            radioButton.setBounds(xPosition, yPosition, 100, 25);
            if (isUnavailable(time, unavailableTimes)) {
                radioButton.setEnabled(false);
                radioButton.setForeground(Color.RED);
            }
            timeGroup.add(radioButton);
            timePanel.add(radioButton);
            yPosition += 30;
            if (yPosition >= 90) {
                yPosition = 0;
                xPosition += 100;
            }
        }

        JButton btnSubmit = new JButton("Submit");
        btnSubmit.setBackground(new Color(13, 38, 167));
        btnSubmit.setForeground(new Color(255, 255, 255));
        btnSubmit.setFont(new Font("Tahoma", Font.BOLD, 15));
        btnSubmit.setBounds(307, 433, 100, 30);
        frmBookAppointment.getContentPane().add(btnSubmit);

        JButton btnBack = new JButton("Back to Main Menu");
        btnBack.setBackground(new Color(13, 38, 167));
        btnBack.setForeground(new Color(255, 255, 255));
        btnBack.setFont(new Font("Tahoma", Font.BOLD, 15));
        btnBack.setBounds(257, 473, 200, 30);
        frmBookAppointment.getContentPane().add(btnBack);
        
        JPanel panel = new JPanel();
        panel.setLayout(null);
        panel.setBackground(new Color(13, 38, 167));
        panel.setBounds(0, 37, 712, 40);
        frmBookAppointment.getContentPane().add(panel);
        
        JLabel lblSignInGreeting = new JLabel("SERIAL NUMBER: " + serialNumber);
        lblSignInGreeting.setHorizontalAlignment(SwingConstants.CENTER);
        lblSignInGreeting.setForeground(Color.WHITE);
        lblSignInGreeting.setFont(new Font("Tahoma", Font.BOLD, 15));
        lblSignInGreeting.setBounds(75, 11, 562, 18);
        panel.add(lblSignInGreeting);

        // Action listener for the btnBack button
        btnBack.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                openMainMenu();
            }
        });

        // Action listener for the btnSubmit button
        btnSubmit.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String contact = textFieldContact.getText();
                String branch = (String) comboBoxBranch.getSelectedItem();
                String type = (String) comboBoxAType.getSelectedItem();
                String date = ((JTextField) dateChooser.getDateEditor().getUiComponent()).getText();
                String time = getSelectedTime();

                if (contact.isEmpty() || branch == null || date.isEmpty() || time == null) {
                    JOptionPane.showMessageDialog(frmBookAppointment, 
                        "Please fill out all fields.", 
                        "Incomplete Form", JOptionPane.ERROR_MESSAGE);
                } else {
                    String transactionId = generateTransactionId();
                    JOptionPane.showMessageDialog(frmBookAppointment, 
                        "Appointment booked for " + fName + " " + lName + " at " + branch + " on " + date + " at " + time + ".\n" +
                        "A confirmation email has been sent to " + email + ".",
                        "Appointment Confirmation", JOptionPane.INFORMATION_MESSAGE);
                    
                    JOptionPane.showMessageDialog(frmBookAppointment, 
                            "Transaction ID: " + transactionId + "\n" + "PLEASE COPY FOR SMOOTH TRANSACTION",
                            "IMPORTANT: TRANSACTION ID", JOptionPane.INFORMATION_MESSAGE);
                    
                }
            }
        });
    }

    private boolean isUnavailable(String time, String[] unavailableTimes) {
        for (String unavailable : unavailableTimes) {
            if (time.equals(unavailable)) {
                return true;
            }
        }
        return false;
    }

    private String getSelectedTime() {
        for (java.util.Enumeration<AbstractButton> buttons = timeGroup.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();

            if (button.isSelected()) {
                return button.getText();
            }
        }

        return null;
    }

    private void loadDeviceInfo() {
        lblInsertName.setText(fName + " " + lName);
        lblInsertEmail.setText(email);
    }
    
    private String generateTransactionId() {
        int length = 10;
        String characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
        StringBuilder sb = new StringBuilder();
        Random random = new Random();

        for (int i = 0; i < length; i++) {
            char randChar = characters.charAt(random.nextInt(characters.length()));
            sb.append(randChar);
        }

        return sb.toString();
    }
    
 // Method to open Main Menu window
    private void openMainMenu() {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainMenu mainMenu = new MainMenu(serialNumber, conn); // Pass serialNumber and conn back to MainMenu
                mainMenu.getFrame().setVisible(true);
                frmBookAppointment.dispose();
            }
        });
    }

    public Window getFrame() {
        return frmBookAppointment;
    }
}
